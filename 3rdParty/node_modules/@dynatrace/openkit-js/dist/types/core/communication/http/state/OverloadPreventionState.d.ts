import { CommunicationChannel, StatusRequest, StatusResponse } from '../../../../api';
import { HttpResponse } from '../HttpClient';
import { StateContext } from './StateContext';
export declare class OverloadPreventionState implements CommunicationChannel {
    private readonly context;
    constructor(context: StateContext, response: HttpResponse);
    sendNewSessionRequest(url: string, request: StatusRequest): Promise<StatusResponse>;
    sendPayloadData(url: string, request: StatusRequest, query: string): Promise<StatusResponse>;
    sendStatusRequest(url: string, request: StatusRequest): Promise<StatusResponse>;
    private parseRetryHeader;
}
//# sourceMappingURL=OverloadPreventionState.d.ts.map