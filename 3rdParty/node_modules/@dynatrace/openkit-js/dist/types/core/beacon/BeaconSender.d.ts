import { OpenKitConfiguration } from '../config/Configuration';
import { OpenKitImpl } from '../impl/OpenKitImpl';
import { BeaconCacheImpl, CacheEntry } from './strategies/BeaconCache';
export interface BeaconSender {
    flush(): Promise<void>;
    flushImmediate(): Promise<void>;
}
export declare class BeaconSenderImpl implements BeaconSender {
    private readonly openKit;
    private readonly cache;
    private readonly appId;
    private readonly beaconUrl;
    private readonly sendingStrategies;
    private readonly channel;
    private readonly timestampProvider;
    private readonly logger;
    private okServerId;
    private isShutdown;
    private initialized;
    private flushing;
    constructor(openKit: OpenKitImpl, cache: BeaconCacheImpl, config: OpenKitConfiguration);
    init(): Promise<void>;
    sessionAdded(entry: CacheEntry): void;
    isInitialized(): boolean;
    shutdown(): Promise<void>;
    flush(): Promise<void>;
    flushImmediate(): Promise<void>;
    private sendNewSessionRequests;
    private sendNewSessionRequest;
    private finishSessions;
    private sendPayloadData;
    private sendPayload;
}
//# sourceMappingURL=BeaconSender.d.ts.map