import { BeaconSender } from '../BeaconSender';
import { BeaconCache, CacheEntry } from './BeaconCache';
export interface SendingStrategy {
    init(sender: BeaconSender, cache: BeaconCache): void;
    entryAdded(entry: CacheEntry): void;
    shutdown(): Promise<void>;
}
export declare abstract class AbstractSendingStrategy implements SendingStrategy {
    protected sender?: BeaconSender;
    protected cache?: BeaconCache;
    init(sender: BeaconSender, cache: BeaconCache): void;
    shutdown(): Promise<void>;
    entryAdded(entry: CacheEntry): void;
    protected afterInit(): void;
    protected flush(): Promise<void>;
}
//# sourceMappingURL=SendingStrategy.d.ts.map