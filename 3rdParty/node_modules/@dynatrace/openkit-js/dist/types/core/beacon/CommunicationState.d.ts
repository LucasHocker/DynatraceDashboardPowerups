import { CaptureMode, StatusResponse } from '../../api';
/**
 * Represents the state of the current OpenKit Object.
 */
export interface CommunicationState {
    /**
     * The server id which should be used for the next request.
     */
    readonly serverId: number;
    /**
     * The maximum beacon size in bytes.
     */
    readonly maxBeaconSize: number;
    /**
     * The multiplicity which should be send to the server.
     */
    readonly multiplicity: number;
    /**
     * Flag to check if errors should be captured.
     */
    readonly captureErrors: CaptureMode;
    /**
     * The crash reporting mode
     */
    readonly captureCrashes: CaptureMode;
    readonly capture: CaptureMode;
    /**
     * Locks the server id so it can't change.
     */
    setServerIdLocked(): void;
    /**
     * Update the state with a status response.
     *
     * @param response The status response
     */
    updateFromResponse(response: StatusResponse): void;
    /**
     * Disables all capturing of data.
     */
    disableCapture(): void;
    /**
     * setServerId:
     */
    setServerId(id: number): void;
}
//# sourceMappingURL=CommunicationState.d.ts.map